name: Build and Publish

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        runtime: [win-x64, linux-x64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build and publish
        run: |
          dotnet publish -c Release -r ${{ matrix.runtime }} --self-contained true -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true -o ./publish/${{ matrix.runtime }}

      - name: Create archive (Linux)
        if: matrix.runtime == 'linux-x64'
        run: |
          cd ./publish/${{ matrix.runtime }}
          tar -czf ../../vk-comments-deleter-${{ matrix.runtime }}.tar.gz *

      - name: Create archive (Windows)
        if: matrix.runtime == 'win-x64'
        run: |
          cd ./publish/${{ matrix.runtime }}
          zip -r ../../vk-comments-deleter-${{ matrix.runtime }}.zip *

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: vk-comments-deleter-${{ matrix.runtime }}
          path: |
            vk-comments-deleter-${{ matrix.runtime }}.tar.gz
            vk-comments-deleter-${{ matrix.runtime }}.zip
          if-no-files-found: ignore

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Display structure of downloaded files
        run: ls -la

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          body: |
            ## VK Comments Deleter ${{ github.ref_name }}
            
            Автоматическая сборка для удаления комментариев ВКонтакте.
            
            ### Скачать:
            - **Windows**: `vk-comments-deleter-win-x64.zip`
            - **Linux**: `vk-comments-deleter-linux-x64.tar.gz`
            
            ### Использование:
            1. Распакуйте архив
            2. Запустите исполняемый файл
            3. Следуйте инструкциям в программе
            
            ### Требования:
            - .NET 9.0 Runtime (включен в self-contained сборки)
            - Access Token ВКонтакте с правами на управление комментариями (например Kate Mobile)

      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./vk-comments-deleter-win-x64/vk-comments-deleter-win-x64.zip
          asset_name: vk-comments-deleter-win-x64.zip
          asset_content_type: application/zip

      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./vk-comments-deleter-linux-x64/vk-comments-deleter-linux-x64.tar.gz
          asset_name: vk-comments-deleter-linux-x64.tar.gz
          asset_content_type: application/gzip